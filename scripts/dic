#!/bin/bash
daum="https://dic.daum.net"
lang=en
lang=zh
tts="http://tts-dic.daum.net/read?lang=${lang}\&txt" #=Look+at+the+response+to+the+tsunami+--+it%27s+inspiring.&format=mpeg
daum_dic="${daum}/search.do"
daum_id="${daum}/word/view.do" #=ekw000146827

daum_wdic="${daum}/search.do?q"
daum_wid="${daum}/word/view.do?wordid" #=ekw000146827

dic_all='&dic=all'

audio_dir="${HOME}/Project/dic/mp3"
#audio_dir="~/Project/dic/mp3"
all_audios="${audio_dir}/*.mp3"

function setVAR(){
    W1="${1%.*}"
    W2="${W1##*/}"

    W3="${W2%%_*}"
    W4="${W3%%-*}"

    URL=$(curl -s -A 'Mozilla/4.0' --data-urlencode "q=${W4}" "${daum_dic}")
    FM="$(getMean "${URL}")"
    MP="${audio_dir}//${W4}-${FM}"

    WD_ENCODE=''
    WD_ENCODE=$(sed -En 's#"([^"]+)".*#\1#p' <<< $( checkNgetSpell "${W4}" ) )
    WD=$(sed -En 's#"([^"]+)"\s*(.*)#\2#p' <<< $( checkNgetSpell "${W4}") )
    WD="${WD:-${W4}}"


    M_SFILE="${audio_dir}/${W4}"

    for i in ${all_audios}
      do M_NEW=$( sed -En -e '/'"${1}"'/bX;q' -e ':X e echo NO' <<< "${i##*/}" )
         [ "$M_NEW" = "NO" ] && break 
      done
}

function trimVoice(){
    sed -E -e '/\+/{s/.*_(.+)\.mp3$/\1/}'\
      -e '/\+/!{s/.*\/([^_]+)_.*/\1/}' <<< "$1"
}

function tts_(){
  mpv $( sed -E -e 's/'"'"'/%27/g'\
           -e 's/:/--/g'\
           -e 's/,/--/g'\
           -e 's/ /+/g'\
           -e 's#\(#--#g'\
           -e 's#\)#--#g'\
           -e 's#^#'"${daum_tts}"='#'\
           -e 's#$#.\&format=mpeg#' <<< "$1" )
}


function urlEncoding(){
    sed -E -e '/%27|&#039/{s//'"'"'/g}'\
           -e '/%3A/{s//:/g}'\
           -e '/%2C/{s//,/g}'\
           -e 's/\+/ /g' <<< "$1"
}

function checkNgetSpell(){
    # <a href="/word/view.do?wordid=eew000034775"
    sed -En -e '/tit_speller/{s/>([^<]+)<|./\1/g;bZ}'\
            -e '/"num_search"/{s/>([^<0-9]+)<|./\1/g;bZ}'\
            -e ':X /link_speller/{s#href=("[^"]+")|>([^<]+)<|.#\1\2#gp;q}'\
            -e 'b'\
            -e ':Z p' <<< $( curl -s -A 'Mozilla/4.0' --data-urlencode "q=${1}" "${daum_dic}" )
}

function getMean(){
    sed -En -e '/"num_search"/{s/>([^<0-9]+)<|./\1/g;p;q}' \
        <<< "${1}" 
}

function showEDic(){
    sed -En -e '/txt_mean/{s/>([^<]+)<|./\1/g;{s/.*/\t&/;bX}}'\
            -e 'b'\
            -e ':X p' <<< "${URL}"

}

function displayOnly(){
  setVAR "$1"
    clear
    echo "===* ${WD}: ${FM} *==="
    sed -En -e '/speller"/{s/>([^<]+)<|./\1/g;{s/[a-z]+/ < & >/;bX}}'\
    -e '/"tit_word"/{s/>([^<]+)<|./\1/g;{s/[^ ]+/\t<<< & >>>/;bX'}}\
    -e '/"txt_emph1"/{s/>([^<]+)<|./\1/g;s/.*/\n  << & >>\n/;bX}'\
    -e '/"txt_searchword"/{s/>([^<]+)<|./\1/g;s/.*/\n  << & >>\n/;bX}'\
    -e '/txt_search"/{/num_search"/!{s/>([^<]+)<|./\1/g;s/.*/    &/;bX}}'\
    -e '/num_search/{/txt_search"/{s/>([^<]+)<|./\1/g;s/.*/\t&/;bX}}'\
    -e 'b'\
    -e ':X p' <<< "${URL}"

    echo "================ END ==================="
}

function dicLocal(){
  setVAR "$1"
    clear
    echo "=== Locak ${WD}: ${FM} ==="
    sed -E '=' <<< "${URL}" \
    |sed -En -e '/speller"/{s/>([^<]+)<|./\1/g;{s/[a-z]+/ < & >/;bX}}'\
    -e '/data-audio data-url="http/{s#\s+([가-힣]+)|>([^<]+)<|data-url=("[^"]+")|.#\1\2\3#g;bZ}'\
    -e '/"tit_word"/{s/>([^<]+)<|./\1/g;{s/[^ ]+/\t<<< & >>>/;bX'}}\
    -e '/"txt_emph1"/{s/>([^<]+)<|./\1/g;s/.*/\n  << & >>\n/;bX}'\
    -e '/"txt_searchword"/{s/>([^<]+)<|./\1/g;s/.*/\n  << & >>\n/;bX}'\
    -e '/txt_search"/{/num_search"/!{s/>([^<]+)<|./\1/g;s/.*/    &/;bX}}'\
    -e '/num_search/{/txt_search"/{s/>([^<]+)<|./\1/g;s/.*/\t&/;bX}}'\
    -e 'b'\
    -e ':Z N;s/\n|\s+/ /g;h;s/^([^"]+)?"([^"]+)"\s(.*)/\1/p'\
    -e 'g;s##mpv "'"${audio_dir}/${WD}-${FM}"'"_\3.mp3 >/dev/null 2>\&1;#e'\
    -e ':X p;/^\s+[a-zA-Z0-9(]+\.?\s?[a-zA-Z]+.*/{s##"&"#;s#^"\s*(.*)"$#tts "\1" already #e}'\
    -e 'e sleep 1' 

      echo "================ END ==================="
}
function dicWeb(){
  setVAR "$1"
    clear
    echo "===== *** ${WD}: ${FM} *** ====="
    sed -E '=' <<< "${URL}" \
    |sed -En -e 's/^\s*$//' \
    -e '/tit_speller"/{s/>([^<]+)<|./\1/g;bT}'\
    -e '/link_speller"/{s/>([^<]+)<|./\1/g;{s/[a-z]+/ = &/;bT}}'\
    -e '/"tit_word"/{s/>([^<]+)<|./\1/g;{s/[^ ]+/\n\t<<< & >>>/;bT}}'\
    -e '/"txt_searchword"/{s/>([^<]+)<|./\1/g;s/.*/\n  << & >>\n/;bT}'\
    -e '/"txt_emph1"/{s/>([^<]+)<|./\1/g;s/.*/  &/;bT}'\
    -e '/num_search/{/txt_search"/{s/>([^<]+)<|./\1/g;s/.*/\t&/;bT}}'\
    -e '/txt_search"/{/num_search"/!{s/>([^<]+)<|./\1/g;s/.*/\t&/;bT}}'\
    -e '/data-audio data-url="http/{s#\s+([가-힣]+)|>([^<]+)<|data-url=("[^"]+")|.#\1\2\3#g;bX}'\
    -e 'b'\
    -e ':X N;s/\n|\s+/ /g;h;s/^([^"]+)?"([^"]+)"\s(.*)/\1/p'\
    -e 'g;h;s##curl -s -o "'"${audio_dir}/${WD}-${FM}"'"_\3.mp3 "\2"#e'\
    -e 'g;s##mpv "'"${audio_dir}/${WD}-${FM}"'"_\3.mp3 >/dev/null 2>\&1;#e;bZ'\
    -e ':Y p;/^\s+[a-zA-Z0-9(]+\.?\s?[a-zA-Z]+.*/{s##"&"#;s#^"\s*(.*)"$#tts "\1"#e;bZ}'\
    -e ':T /^[^가-힣]*[가-힣]+/bH'\
        -e '/[^a-zA-Z]*[a-zA-Z]+/bE'\
        -e '/[^あ-ん]*[あ-ん]+/bJ'\
        -e '/[^⺀-⿕]*[⺀-⿕]+/bC'\
    -e ':E p;s#^[^a-zA-Z]*([^>]+).*#tts "\1" en#e;bZ'\
    -e ':H p;s#^[^가-힣]*([^>]+).*#tts "\1" kr#e;bZ'\
    -e ':J p;s#^[⺀-⿕]*([^>]+).*#tts "\1" ja#e;bZ'\
    -e ':C p;s#^[^⺀-⿕0-9]*([^>]+).*#tts "\1" zh#e;bZ'\
    -e ':Z ' 

      echo "================ END ==================="
}

function showKDic(){
    #clear
    echo "===== ${WD} ${M_NEW/OK/**/} ====="
    sed -En -e '/num_mean/{s/>([^<]+)<|./\1/g;s/[0-9]\.[^0-9]+/\n&/g;s/\.\s+/. /g;bX}'\
            -e '/txt_pronounce/{s/>([^<]+)|./\1/g;bX}'\
            -e '/data-audio data-url="http/{s/data-url="([^"]+)"|./\1/g;bX}'\
            -e '/inner_tit/{s/.*>([^<]+)<.*/\n<<< \1 >>>/;bX}'\
            -e '/tit_sort/{s/.*>([^>]+)<.*/\n\t<< \1 >>/g;bX}'\
            -e '/txt_sort/{s/.*>([^<]+)<.*>([^<]+)<.*/    \1 => \2/g;bX}'\
            -e '/"tit_word"/{s/.*>\s?([^<]+)<.*/\n\t<< \1 >>\n/;bX}'\
            -e '/"txt_emph1"/{s/>([^<]+)<|./\1/g;s/.*/ &/;bX}'\
            -e '/"mean_info"/{s/>([^<]+)<|./\1/g;s/.*/  &\n/;bX}'\
            -e 'b'\
            -e ':X p' <<< "${URL}"

    echo "<< ${WD} >>"
    showEDic

    echo "================ END ==================="
}

function playdic(){

            awk -v SFILE=${M_SFILE} -v NEW=${M_NEW} 'BEGIN{FNAME; I=00;}

            {
              if($0 ~ /http/) {
                    if(/&format/){\
                      FNAME = gensub(/.*en&*txt=([^&.]+).*/,SFILE"_\\1.mp3","1")
                    }else {
                      FNAME = SFILE"_"(I++)".mp3"
                    }
                    
                    if(NEW=="OK"){
                      cmd_curl="xargs -I{} curl -o "FNAME" {} > /dev/null 2>&1" 
                      print $0 | cmd_curl
                      close(cmd_curl)
                    }

                    cmd_mpv="mpv "FNAME" > /dev/null 2>&1"
                    print $0 | cmd_mpv 
                    close (cmd_mpv)
              }else  print $0

              print "sleep 1" | "/bin/bash"
              close("/bin/bash")
            }' <<< "$1"
}

function playAll(){

  for i in ${all_audios}
      do 
        #setVAR $i
        arr1=$( sed -En 's#^(.*/)([^_]+)_(.*)#\2#p' <<< "$i" )
        exist=no

        for a in ${arr[@]}
           do  if [ "$arr1" = "$a" ]
                then 
                    exist=ok
                    break
                fi
          done

        if [ "$exist" = "no" ]
          then arr+=("$arr1")
          fi
  done

  playWords ${arr[@]}

}

function playWords(){

    for i in "${@}"
      do 
        displayOnly $i
        for m in ${audio_dir}/${i}_*.mp3
          do
            mpv $m > /dev/null 2>&1
            #sleep 1
          done
      done
}

function mainDic(){
    dicWeb $W4
    #playdic "$( showKDic $W4 )"
}

echo "${1}"
if [ -n "${1}" ]; then  
    setVAR $1
    [ "$M_NEW" = "NO" ] && dicLocal "${1}" || dicWeb "${1}"
else playAll
fi 

